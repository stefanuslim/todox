{"version":3,"sources":["../node_modules/@material-ui/icons/esm/MenuOutlined.js","components/MobileDrawer.js"],"names":["createSvgIcon","React","createElement","d","Item","to","this","props","link","activeClassName","classes","active","root","className","onClick","handleDrawer","ListItem","button","Icon","ListItemIcon","ListItemText","primary","text","Component","DrawerItem","withStyles","theme","background","palette","light","borderTopRightRadius","borderBottomRightRadius","textDecoration","color","MobileMenu","state","title","lists","dialogOpen","window","setTitle","setState","handleDrawerToggle","bind","handleDialogOpen","handleDialogClose","getLists","addList","createList","database","then","console","log","db","default","onsuccess","_evt","getMultipleByFilters","filter","val","listsLoaded","name","todo_template","list","TodoList","add","evt","onerror","msg","addError","document","getElementById","value","undefined","mobileOpen","AppBar","position","appBar","Toolbar","IconButton","aria-label","edge","menuButton","Typography","variant","noWrap","grow","Badge","badgeContent","max","drawer","Drawer","anchor","open","onClose","paper","drawerPaper","ModalProps","keepMounted","toolbar","Divider","List","a","DayIcon","StarIcon","BillsIcon","ShoppingIcon","WorkIcon","PendingIcon","CheckIcon","CrossIcon","length","map","id","key","component","notFound","style","padding","Skeleton","width","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","autoComplete","fullWidth","error","Boolean","helperText","DialogActions","Button","breakpoints","up","flexShrink","main","secondary","marginLeft","mixins","flexGrow","display","fontSize","typography","subtitle2","spacing"],"mappings":"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","file":"static/js/11.67acb69f.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'MenuOutlined');","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Typography,\n  AppBar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Toolbar,\n  IconButton,\n  Badge,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Button,\n} from \"@material-ui/core\"\nimport { Skeleton } from \"@material-ui/lab\"\nimport {\n  NotificationsNoneOutlined as BellIcon,\n  StarBorderOutlined as StarIcon,\n  CheckOutlined as CheckIcon,\n  ClearOutlined as CrossIcon,\n  QueryBuilderOutlined as PendingIcon,\n  TodayOutlined as DayIcon,\n  AttachMoneyOutlined as BillsIcon,\n  ShoppingCartOutlined as ShoppingIcon,\n  WorkOutline as WorkIcon,\n  InfoOutlined as InfoIcon,\n  AddOutlined as PlusIcon,\n  MenuOutlined as MenuIcon,\n} from \"@material-ui/icons\"\n\nimport { NavLink } from \"react-router-dom\"\n\nconst drawerWidth = 240\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <NavLink\n        to={this.props.link}\n        activeClassName={`${this.props.classes.active} ${this.props.classes.root}`}\n        className={this.props.classes.root}\n        onClick={this.props.handleDrawer}\n      >\n        <ListItem button>\n          {this.props.Icon ? (\n            <ListItemIcon>\n              <this.props.Icon />\n            </ListItemIcon>\n          ) : (\n            \"\"\n          )}\n          <ListItemText primary={this.props.text} />\n        </ListItem>\n      </NavLink>\n    )\n  }\n}\nlet DrawerItem = withStyles(theme => ({\n  active: {\n    \"& .MuiListItem-root\": {\n      background: `${theme.palette.primary.light}`,\n      borderTopRightRadius: 20,\n      borderBottomRightRadius: 20,\n    },\n  },\n  root: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n}))(Item)\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"todox\",\n      lists: [],\n      dialogOpen: false,\n    }\n\n    window.setTitle = title => {\n      this.setState({ title })\n    }\n\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this)\n    this.handleDialogOpen = this.handleDialogOpen.bind(this)\n    this.handleDialogClose = this.handleDialogClose.bind(this)\n    this.getLists = this.getLists.bind(this)\n    this.addList = this.addList.bind(this)\n    this.createList = this.createList.bind(this)\n  }\n\n  componentDidMount() {\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        let db = new database.default()\n        db.onsuccess = _evt => {\n          window.database = db\n          this.getLists()\n        }\n      })\n    } else {\n      this.getLists()\n    }\n  }\n\n  getLists() {\n    window.database.getMultipleByFilters(\n      \"lists\",\n      \"id\",\n      {\n        filter: \"__re\",\n        val: /^(?!.*bills|today|work|shopping).*$/,\n      },\n      lists => {\n        this.setState({\n          ...this.state,\n          listsLoaded: true,\n          lists: lists || [],\n        })\n      }\n    )\n  }\n\n  handleDialogOpen() {\n    this.setState({\n      ...this.state,\n      dialogOpen: true,\n    })\n  }\n\n  addList(name) {\n    import(\"../todo_template\").then(todo_template => {\n      let list = new todo_template.default.TodoList(\n        name,\n        () => {\n          window.database.add(\"lists\", list).onsuccess = evt => {\n            console.log(\"done\")\n            this.handleDialogClose()\n            this.getLists()\n          }\n        },\n        {\n          onerror: msg => {\n            console.log(\"error\", msg)\n            this.setState({\n              ...this.state,\n              addError:\n                \"This name is already being used. Please try sometthing else!\",\n            })\n          },\n        }\n      )\n    })\n  }\n  createList() {\n    let name = document.getElementById(\"add-list-to-db\").value\n    if (name) {\n      if (!window.database) {\n        import(\"../database\").then(database => {\n          console.log(\"[indexedDB] Creating database instance\")\n          let db = new database.default()\n          db.onsuccess = _evt => {\n            window.database = db\n            this.addList(name)\n          }\n        })\n      } else {\n        this.addList(name)\n      }\n    } else {\n      this.setState({\n        ...this.state,\n        addError: \"Please enter a name\",\n      })\n    }\n  }\n\n  handleDialogClose() {\n    this.setState({\n      ...this.setState({\n        ...this.state,\n        dialogOpen: false,\n        addError: undefined\n      }),\n    })\n  }\n\n\n  handleDrawerToggle() {\n    this.setState({\n      ...this.state,\n      mobileOpen: !this.state.mobileOpen,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar position=\"fixed\" className={this.props.classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={this.handleDrawerToggle}\n              className={this.props.classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {this.state.title}\n            </Typography>\n            <div className={this.props.classes.grow} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"Show Notifications\"\n            >\n              <Badge badgeContent={6} color=\"primary\" max={9}>\n                <BellIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <nav className={this.props.classes.drawer}>\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={this.state.mobileOpen}\n            onClose={this.handleDrawerToggle}\n            classes={{\n              paper: this.props.classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <div>\n              <div className={this.props.classes.toolbar} />\n              <Divider />\n              <List>\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/lists/today\"\n                  text=\"My Day\"\n                  Icon={DayIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/lists/starred\"\n                  text=\"Starred Tasks\"\n                  Icon={StarIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/lists/bills\"\n                  text=\"Bills\"\n                  Icon={BillsIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/lists/shopping\"\n                  text=\"Shopping List\"\n                  Icon={ShoppingIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/lists/work\"\n                  text=\"Work\"\n                  Icon={WorkIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/viewby/pending\"\n                  text=\"Pending\"\n                  Icon={PendingIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/viewby/done\"\n                  text=\"Done\"\n                  Icon={CheckIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox/viewby/missing\"\n                  text=\"Missing\"\n                  Icon={CrossIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <div className={this.props.classes.button}>\n                  <Typography variant=\"button\">Your Lists</Typography>\n                  <div className={this.props.classes.grow} />\n                  <IconButton onClick={this.handleDialogOpen}>\n                    <PlusIcon />\n                  </IconButton>\n                </div>\n                {this.state.listsLoaded ? (\n                  this.state.lists.length !== 0 ? (\n                    this.state.lists.map(list => (\n                      <DrawerItem\n                      className={this.props.classes.a}\n                        handleDrawer={this.handleDrawerToggle}\n                        text={list.name}\n                        link={`/todox/lists/${list.id}`}\n                        key={list.id}\n                      />\n                    ))\n                  ) : (\n                    <Typography\n                      variant=\"body1\"\n                      component=\"i\"\n                      className={this.props.classes.notFound}\n                    >\n                      No lists found. Click on the + icon on top right to create\n                      one\n                    </Typography>\n                  )\n                ) : (\n                  <div style={{ padding: 8 }}>\n                    <Skeleton width={200} />\n                    <Skeleton width={160} />\n                  </div>\n                )}\n              </List>\n              <Divider />\n              <List>\n                <ListItem button>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About us\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </nav>\n        <Dialog\n          open={this.state.dialogOpen}\n          onClose={this.handleDialogClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add new List</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To create a new task-list enter your list title here\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"add-list-to-db\"\n              label=\"List tittle\"\n              type=\"text\"\n              autoComplete=\"off\"\n              fullWidth\n              error={Boolean(this.state.addError)}\n              helperText={this.state.addError}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.createList} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(theme => ({\n\n  drawer: {\n    \n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    display: \"flex\",\n    padding: 0,\n    fontSize: theme.typography.subtitle2.fontSize,\n    width: \"-webkit-fill-available\",\n    \"& .MuiTypography-root, .MuiIconButton-root\": {\n      padding: theme.spacing(1),\n    },\n  },\n  notFound: {\n    fontSize: \"smaller\",\n    padding: ` 0 ${theme.spacing(1)}px`,\n    display: \"flex\",\n  },\n}))(MobileMenu)\n"],"sourceRoot":""}