{"version":3,"sources":["components/DesktopDrawer.js"],"names":["Item","to","this","props","link","activeClassName","classes","active","button","Icon","primary","text","React","Component","DrawerItem","withStyles","theme","background","palette","light","borderTopRightRadius","borderBottomRightRadius","DesktopMenu","state","title","lists","dialogOpen","window","setTitle","setState","handleDialogOpen","bind","handleDialogClose","getLists","addList","createList","database","then","console","log","db","default","onsuccess","_evt","getMultipleByFilters","filter","val","listsLoaded","name","todo_template","list","TodoList","add","evt","onerror","msg","addError","document","getElementById","value","undefined","position","className","appBar","variant","noWrap","grow","edge","color","aria-label","badgeContent","max","drawer","paper","drawerPaper","open","toolbar","DayIcon","StarIcon","BillsIcon","ShoppingIcon","WorkIcon","PendingIcon","CheckIcon","CrossIcon","onClick","length","map","id","key","component","notFound","style","padding","width","onClose","aria-labelledby","autoFocus","margin","label","type","fullWidth","autoComplete","error","Boolean","helperText","breakpoints","up","flexShrink","main","secondary","marginLeft","mixins","flexGrow","display","fontSize","typography","subtitle2","spacing"],"mappings":"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","file":"static/js/10.498a6e19.chunk.js","sourcesContent":["import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Typography,\n  AppBar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Toolbar,\n  IconButton,\n  Badge,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Button,\n} from \"@material-ui/core\"\nimport { Skeleton } from \"@material-ui/lab\"\nimport {\n  NotificationsNoneOutlined as BellIcon,\n  StarBorderOutlined as StarIcon,\n  CheckOutlined as CheckIcon,\n  ClearOutlined as CrossIcon,\n  QueryBuilderOutlined as PendingIcon,\n  TodayOutlined as DayIcon,\n  AttachMoneyOutlined as BillsIcon,\n  ShoppingCartOutlined as ShoppingIcon,\n  WorkOutline as WorkIcon,\n  InfoOutlined as InfoIcon,\n  AddOutlined as PlusIcon,\n} from \"@material-ui/icons\"\n\nimport { NavLink } from \"react-router-dom\"\n\nconst drawerWidth = 240\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <NavLink to={this.props.link} activeClassName={this.props.classes.active}>\n        <ListItem button>\n          {this.props.Icon ? (\n            <ListItemIcon>\n              <this.props.Icon />\n            </ListItemIcon>\n          ) : (\n            \"\"\n          )}\n          <ListItemText primary={this.props.text} />\n        </ListItem>\n      </NavLink>\n    )\n  }\n}\nlet DrawerItem = withStyles(theme => ({\n  active: {\n    \"& .MuiListItem-root\": {\n      background: `${theme.palette.primary.light}`,\n      borderTopRightRadius: 20,\n      borderBottomRightRadius: 20,\n    },\n  },\n}))(Item)\n\nclass DesktopMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"todox\",\n      lists: [],\n      dialogOpen: false,\n    }\n    window.setTitle = title => {\n      this.setState({ title })\n    }\n\n    this.handleDialogOpen = this.handleDialogOpen.bind(this)\n    this.handleDialogClose = this.handleDialogClose.bind(this)\n    this.getLists = this.getLists.bind(this)\n    this.addList = this.addList.bind(this)\n    this.createList = this.createList.bind(this)\n  }\n\n  componentDidMount() {\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        let db = new database.default()\n        db.onsuccess = _evt => {\n          window.database = db\n          this.getLists()\n        }\n      })\n    } else {\n      this.getLists()\n    }\n  }\n\n  getLists() {\n    window.database.getMultipleByFilters(\n      \"lists\",\n      \"id\",\n      {\n        filter: \"__re\",\n        val: /^(?!.*bills|today|work|shopping).*$/,\n      },\n      lists => {\n        this.setState({\n          ...this.state,\n          listsLoaded: true,\n          lists: lists || [],\n        })\n      }\n    )\n  }\n\n  handleDialogOpen() {\n    this.setState({\n      ...this.state,\n      dialogOpen: true,\n    })\n  }\n\n  addList(name) {\n    import(\"../todo_template\").then(todo_template => {\n      let list = new todo_template.default.TodoList(\n        name,\n        () => {\n          window.database.add(\"lists\", list).onsuccess = evt => {\n            console.log(\"done\")\n            this.handleDialogClose()\n            this.getLists()\n          }\n        },\n        {\n          onerror: msg => {\n            console.log(\"error\", msg)\n            this.setState({\n              ...this.state,\n              addError:\n                \"This name is already being used. Please try sometthing else!\",\n            })\n          },\n        }\n      )\n    })\n  }\n  createList() {\n    let name = document.getElementById(\"add-list-to-db\").value\n    if (name) {\n      if (!window.database) {\n        import(\"../database\").then(database => {\n          console.log(\"[indexedDB] Creating database instance\")\n          let db = new database.default()\n          db.onsuccess = _evt => {\n            window.database = db\n            this.addList(name)\n          }\n        })\n      } else {\n        this.addList(name)\n      }\n    } else {\n      this.setState({\n        ...this.state,\n        addError: \"Please enter a name\",\n      })\n    }\n  }\n\n  handleDialogClose() {\n    this.setState({\n      ...this.setState({\n        ...this.state,\n        dialogOpen: false,\n        addError: undefined\n      }),\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar position=\"fixed\" className={this.props.classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n              {this.state.title}\n            </Typography>\n\n            <div className={this.props.classes.grow} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"Show Notifications\"\n            >\n              <Badge badgeContent={6} color=\"primary\" max={9}>\n                <BellIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <nav className={this.props.classes.drawer}>\n          <Drawer\n            classes={{\n              paper: this.props.classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div>\n              <div className={this.props.classes.toolbar} />\n              <Divider />\n              <List>\n                <DrawerItem\n                  link=\"/todox/lists/today\"\n                  text=\"My Day\"\n                  Icon={DayIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/lists/starred\"\n                  text=\"Starred Tasks\"\n                  Icon={StarIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/lists/bills\"\n                  text=\"Bills\"\n                  Icon={BillsIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/lists/shopping\"\n                  text=\"Shopping List\"\n                  Icon={ShoppingIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/lists/work\"\n                  text=\"Work\"\n                  Icon={WorkIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <DrawerItem\n                  link=\"/todox/viewby/pending\"\n                  text=\"Pending\"\n                  Icon={PendingIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/viewby/done\"\n                  text=\"Done\"\n                  Icon={CheckIcon}\n                />\n                <DrawerItem\n                  link=\"/todox/viewby/missing\"\n                  text=\"Missing\"\n                  Icon={CrossIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <div className={this.props.classes.button}>\n                  <Typography variant=\"button\">Your Lists</Typography>\n                  <div className={this.props.classes.grow} />\n                  <IconButton onClick={this.handleDialogOpen}>\n                    <PlusIcon />\n                  </IconButton>\n                </div>\n                {this.state.listsLoaded ? (\n                  this.state.lists.length !== 0 ? (\n                    this.state.lists.map(list => (\n                      <DrawerItem\n                        text={list.name}\n                        link={`/todox/lists/${list.id}`}\n                        key={list.id}\n                      />\n                    ))\n                  ) : (\n                    <Typography\n                      variant=\"body1\"\n                      component=\"i\"\n                      className={this.props.classes.notFound}\n                    >\n                      No lists found. Click on the + icon on top right to create\n                      one\n                    </Typography>\n                  )\n                ) : (\n                  <div style={{ padding: 8 }}>\n                    <Skeleton width={200} />\n                    <Skeleton width={160} />\n                  </div>\n                )}\n              </List>\n              <Divider />\n              <List>\n                <ListItem button>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About us\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </nav>\n        <Dialog\n          open={this.state.dialogOpen}\n          onClose={this.handleDialogClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add new List</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To create a new task-list enter your list title here\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"add-list-to-db\"\n              label=\"List tittle\"\n              type=\"text\"\n              fullWidth\n              autoComplete=\"off\"\n              error={Boolean(this.state.addError)}\n              helperText={this.state.addError}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.createList} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(theme => ({\n  drawer: {\n    \"& a\": {\n      color: theme.palette.text.primary,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    display: \"flex\",\n    padding: 0,\n    fontSize: theme.typography.subtitle2.fontSize,\n    width: \"-webkit-fill-available\",\n    \"& .MuiTypography-root, .MuiIconButton-root\": {\n      padding: theme.spacing(1),\n    },\n  },\n  notFound: {\n    fontSize: \"smaller\",\n    padding: ` 0 ${theme.spacing(1)}px`,\n    display: \"flex\",\n  },\n}))(DesktopMenu)\n"],"sourceRoot":""}